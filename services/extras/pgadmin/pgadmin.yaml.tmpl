apiVersion: v1
kind: Secret
type: Opaque
metadata:
 name: pgadmin
data:
 pgadmin-password: am9iaWNv
---
apiVersion: v1
kind: ConfigMap
metadata:
 name: pgadmin-config
data:
 servers.json: |
   {
       "Servers": {
         "1": {
           "Name": "Jobico DB",
           "Group": "Servers",
           "Port": 5432,
           "Username": "postgres",
           "Host": "db.jobico.local",
           "SSLMode": "prefer",
           "MaintenanceDB": "postgres"
         }
       }
   }
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pgadmin-data
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: nfs-csi
  resources:
    requests:
      storage: 3Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgadmin
  template:
    metadata:
      labels:
        app: pgadmin
    spec:
      securityContext:
        fsGroup: 0
      containers:
        - name: pgadmin
          image: dpage/pgadmin4
          ports:
            - containerPort: 80
          env:
            - name: PGADMIN_DEFAULT_EMAIL
              value: admin@jobico.org
            - name: PGADMIN_ENABLE_TLS
              value: "true"
            - name: PGADMIN_DEFAULT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pgadmin
                  key: pgadmin-password              
          volumeMounts:
          - name: certs-vol
            mountPath: "/certs"
            readOnly: true
          - name: pgadmin-config
            mountPath: /pgadmin4/servers.json
            subPath: servers.json
            readOnly: true
          - name: pgadmin-data
            mountPath: /var/lib/pgadmin
      volumes:
      - name: certs-vol
        secret:
          secretName: {DOMAIN}-secret
          items: 
            - key: tls.crt
              path: server.cert
            - key: tls.key
              path: server.key
      - name: pgadmin-config
        configMap:
          name: pgadmin-config
      - name: pgadmin-data
        persistentVolumeClaim:
          claimName: pgadmin-data
---
apiVersion: v1
kind: Service
metadata:
  name: pgadmin-service
spec:
  selector:
    app: pgadmin
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
    - name: https
      protocol: TCP
      port: 443
      targetPort: 443
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: docker-registry-ingress
spec:
    tls:
    - hosts:
       - pg.{DOMAIN}
      secretName: {DOMAIN}-secret
    rules:
    - host: pg.{DOMAIN}
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: pgadmin-service
              port: 
                name: https