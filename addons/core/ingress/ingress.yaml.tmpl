---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik-role
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses
      - ingressclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
      - networking.k8s.io
    resources:
      - ingresses/status
    verbs:
      - update

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-account

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ingress-config
data:
  tr.yaml: |
    tls:
      certificates:
      - certFile: /certs/tls.crt
        keyFile: /certs/tls.key
    tcp:
      routers:
        MyDBRouter0:
          service: MyDBService01
          rule: "HostSNI(`db.{DOMAIN}`)"
          tls:
            passthrough: true
      services:
        MyDBService01:
          loadBalancer:
            servers:
              - address: cluster-jobico-rw.default.svc.cluster.local:5432
---

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik-role-binding

roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-role
subjects:
  - kind: ServiceAccount
    name: traefik-account
    namespace: default 

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: traefik-deployment
  labels:
    app: traefik

spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik-account
      containers:
        - name: traefik
          image: traefik:v3.0
          volumeMounts:
            - name: certs-vol
              mountPath: "/certs"
            - name: config-map
              mountPath: "/etc/tra-conf"
          args:
            - --log.level=DEBUG
            - --api.insecure
            - --entryPoints.websecure.address=:443
            - --entryPoints.web.address=:80
            - --entryPoints.postgres.address=:5432/tcp
            - --entryPoints.websecure.http.tls=true
            - --serversTransport.insecureSkipVerify=true
            - --providers.kubernetesingress=true
            - --providers.kubernetesingress.ingressendpoint.publishedservice=default/traefik-web-service
            - --providers.file.filename=/etc/tra-conf/tr.yaml
          ports:
            - name: web
              containerPort: 80
            - name: websecure
              containerPort: 443
            - name: dashboard
              containerPort: 8080
            - name: pg
              containerPort: 5432
      volumes:
        - name: certs-vol
          secret:
            secretName: {DOMAIN}-secret 
        - name: config-map
          configMap:
            name: ingress-config
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-dashboard-service

spec:
  type: LoadBalancer
  ports:
    - port: 8080
      targetPort: dashboard
  selector:
    app: traefik
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-web-service

spec:
  type: LoadBalancer
  loadBalancerIP: 192.168.122.24
  ports:
    - name: web
      targetPort: web
      port: 80
    - name: websecure
      targetPort: websecure
      port: 443
  selector:
    app: traefik


---

apiVersion: v1
kind: Service
metadata:
  name: traefik-pg-service 
  annotations:
    coredns.io/hostname: "db.{DOMAIN}"
spec:
  type:  LoadBalancer
  ports:
    - port: 5432
      protocol: TCP
      targetPort: pg 
  selector:
    app: traefik

---

kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: traeffik-dashboard-ingress
spec:
    rules:
    - host: ingress.{DOMAIN}
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: traefik-dashboard-service
              port:
                number: 8080 
