LINENO:_DEBUG=on
LINENO:shift
LINENO:[[ 3 -gt 0 ]]
LINENO:case "$1" in
LINENO:shift
LINENO:'[' -n 2 ']'
LINENO:[[ 2 =~ ^[0-9]+$ ]]
LINENO:cpl=2
LINENO:shift
LINENO:[[ 1 -gt 0 ]]
LINENO:case "$1" in
LINENO:shift
LINENO:_DRY_RUN=true
LINENO:_DEBUG=on
LINENO:shift
LINENO:[[ 0 -gt 0 ]]
LINENO:nodes=2
LINENO:cpl=2
LINENO:lb=2
LINENO:echo 'The K8s Cluster is being created with 2 node(s), 2 control plane node(s) and 2 load balncer(s) ...'
LINENO:DRY_RUN echo '>> Dryn run << '
LINENO:'[' true == true ']'
LINENO:echo '>>' Dryn run '<<'
LINENO:jobico::kube::cluster 2 2 2
LINENO:local number_of_nodes=2
LINENO:local number_of_cpl_nodes=2
LINENO:local number_of_lbs=2
LINENO:jobico::kube::init_local_files
LINENO:mkdir -p work
LINENO:touch work/jobico_status
LINENO:jobico::kube::dao::gen_databases 2 2 2
LINENO:local number_of_nodes=2
LINENO:local number_of_cpl_nodes=2
LINENO:local number_of_lbs=2
LINENO:jobico::kube::dao::gen_db 2 2 2
LINENO:local total_workers=2
LINENO:local total_cpl_nodes=2
LINENO:local total_of_lbs=2
LINENO:cp extras/db/db.txt.tmpl work/db.txt
LINENO:'[' 2 -gt 1 ']'
LINENO:echo 'server lbvip'
LINENO:(( i=0 ))
LINENO:(( i<total_of_lbs ))
LINENO:echo 'lb-0 lb'
LINENO:(( i++ ))
LINENO:(( i<total_of_lbs ))
LINENO:echo 'lb-1 lb'
LINENO:(( i++ ))
LINENO:(( i<total_of_lbs ))
LINENO:(( i=0 ))
LINENO:(( i<total_cpl_nodes ))
LINENO:echo 'server-0 control_plane gencert'
LINENO:(( i++ ))
LINENO:(( i<total_cpl_nodes ))
LINENO:echo 'server-1 control_plane gencert'
LINENO:(( i++ ))
LINENO:(( i<total_cpl_nodes ))
LINENO:(( i=0 ))
LINENO:(( i<total_workers ))
LINENO:echo 'node-0 worker gencert'
LINENO:(( i++ ))
LINENO:(( i<total_workers ))
LINENO:echo 'node-1 worker gencert'
LINENO:(( i++ ))
LINENO:(( i<total_workers ))
LINENO:jobico::kube::dao::gen_cluster_db
LINENO:rm -f work/cluster.txt
LLINENO:jobico::kube::dao::query_db worker
LLLINENO:awk -v value=worker -v col=1 '$2 == value {print $col}' work/db.txt
LLINENO:values=('node-0' 'node-1')
LLINENO:local values
LLINENO:for e in "${values[@]}"
LLINENO:echo node-0
LLINENO:for e in "${values[@]}"
LLINENO:echo node-1
LINENO:workers=('node-0' 'node-1')
LINENO:local workers
LLINENO:jobico::kube::dao::query_db control_plane
LLLINENO:awk -v value=control_plane -v col=1 '$2 == value {print $col}' work/db.txt
LLINENO:values=('server-0' 'server-1')
LLINENO:local values
LLINENO:for e in "${values[@]}"
LLINENO:echo server-0
LLINENO:for e in "${values[@]}"
LLINENO:echo server-1
LINENO:servers=('server-0' 'server-1')
LINENO:local servers
LLINENO:jobico::kube::dao::query_db lb
LLLINENO:awk -v value=lb -v col=1 '$2 == value {print $col}' work/db.txt
LLINENO:values=('lb-0' 'lb-1')
LLINENO:local values
LLINENO:for e in "${values[@]}"
LLINENO:echo lb-0
LLINENO:for e in "${values[@]}"
LLINENO:echo lb-1
LINENO:lbs=('lb-0' 'lb-1')
LINENO:local lbs
LLINENO:jobico::kube::dao::query_db lbvip
LLLINENO:awk -v value=lbvip -v col=1 '$2 == value {print $col}' work/db.txt
LLINENO:values=('server')
LLINENO:local values
LLINENO:for e in "${values[@]}"
LLINENO:echo server
LINENO:local lbvip=server
LINENO:local id1=7
LINENO:local id2=0
LINENO:'[' 2 -gt 1 ']'
LINENO:'[' lbvip '!=' '' ']'
LINENO:echo '192.168.122.7 server.kubernetes.local server 0.0.0.0/24 lbvip'
LINENO:(( id1++ ))
LINENO:for e in "${lbs[@]}"
LINENO:echo '192.168.122.8 lb-0.kubernetes.local lb-0 0.0.0.0/24 lb'
LINENO:(( id1++ ))
LINENO:for e in "${lbs[@]}"
LINENO:echo '192.168.122.9 lb-1.kubernetes.local lb-1 0.0.0.0/24 lb'
LINENO:(( id1++ ))
LINENO:for e in "${servers[@]}"
LINENO:echo '192.168.122.10 server-0.kubernetes.local server-0 0.0.0.0/24 server'
LINENO:(( id1++ ))
LINENO:for e in "${servers[@]}"
LINENO:echo '192.168.122.11 server-1.kubernetes.local server-1 0.0.0.0/24 server'
LINENO:(( id1++ ))
LINENO:for e in "${workers[@]}"
LINENO:echo '192.168.122.12 node-0.kubernetes.local node-0 10.200.0.0/24 node'
LINENO:(( id1++ ))
LINENO:(( id2++ ))
LINENO:for e in "${workers[@]}"
LINENO:echo '192.168.122.13 node-1.kubernetes.local node-1 10.200.1.0/24 node'
LINENO:(( id1++ ))
LINENO:(( id2++ ))
LINENO:DEBUG jobico::kube::print_databases_info
LINENO:'[' on == on ']'
LINENO:jobico::kube::print_databases_info
LLINENO:jobico::kube::dao::count_cluster_db server
LLLINENO:awk -v value=server '$5 == value {count++} END {print count}' work/cluster.txt
LLINENO:local value=2
LLINENO:echo 2
LINENO:local n_servers=2
LLINENO:jobico::kube::dao::query_db worker
LLLINENO:awk -v value=worker -v col=1 '$2 == value {print $col}' work/db.txt
LLINENO:values=('node-0' 'node-1')
LLINENO:local values
LLINENO:for e in "${values[@]}"
LLINENO:echo node-0
LLINENO:for e in "${values[@]}"
LLINENO:echo node-1
LINENO:workers=('node-0' 'node-1')
LINENO:local workers
LLINENO:jobico::kube::dao::get_lb_data 1
LLLINENO:jobico::kube::dao::query_cluster_db lbvip 1
LLLLINENO:awk -v value=lbvip -v col=1 '$5 == value {print $col}' work/cluster.txt
LLLINENO:values=('192.168.122.7')
LLLINENO:local values
LLLINENO:for e in "${values[@]}"
LLLINENO:echo 192.168.122.7
LLINENO:local lb=192.168.122.7
LLINENO:echo 192.168.122.7
LINENO:local vip=192.168.122.7
LLINENO:jobico::kube::dao::get_lb_data 2
LLLINENO:jobico::kube::dao::query_cluster_db lbvip 2
LLLLINENO:awk -v value=lbvip -v col=2 '$5 == value {print $col}' work/cluster.txt
LLLINENO:values=('server.kubernetes.local')
LLLINENO:local values
LLLINENO:for e in "${values[@]}"
LLLINENO:echo server.kubernetes.local
LLINENO:local lb=server.kubernetes.local
LLINENO:echo server.kubernetes.local
LINENO:local vipdns=server.kubernetes.local
LLINENO:jobico::kube::dao::get_lb_data 3
LLLINENO:jobico::kube::dao::query_cluster_db lbvip 3
LLLLINENO:awk -v value=lbvip -v col=3 '$5 == value {print $col}' work/cluster.txt
LLLINENO:values=('server')
LLLINENO:local values
LLLINENO:for e in "${values[@]}"
LLLINENO:echo server
LLINENO:local lb=server
LLINENO:echo server
LINENO:local viphost=server
LLINENO:jobico::kube::etcd::get_etcd_cluster
LLINENO:local cluster=
LLINENO:local i=0
LLINENO:read IP FQDN HOST SUBNET TYPE
LLINENO:'[' lbvip == server ']'
LLINENO:read IP FQDN HOST SUBNET TYPE
LLINENO:'[' lb == server ']'
LLINENO:read IP FQDN HOST SUBNET TYPE
LLINENO:'[' lb == server ']'
LLINENO:read IP FQDN HOST SUBNET TYPE
LLINENO:'[' server == server ']'
LLINENO:'[' -n '' ']'
LLINENO:cluster=server-0=https://192.168.122.10:2380
LLINENO:(( i++ ))
LLINENO:read IP FQDN HOST SUBNET TYPE
LLINENO:'[' server == server ']'
LLINENO:'[' -n server-0=https://192.168.122.10:2380 ']'
LLINENO:cluster=server-0=https://192.168.122.10:2380,
LLINENO:cluster=server-0=https://192.168.122.10:2380,server-1=https://192.168.122.11:2380
LLINENO:(( i++ ))
LLINENO:read IP FQDN HOST SUBNET TYPE
LLINENO:'[' node == server ']'
LLINENO:read IP FQDN HOST SUBNET TYPE
LLINENO:'[' node == server ']'
LLINENO:read IP FQDN HOST SUBNET TYPE
LLINENO:echo server-0=https://192.168.122.10:2380,server-1=https://192.168.122.11:2380
LINENO:local cluster=server-0=https://192.168.122.10:2380,server-1=https://192.168.122.11:2380
LLINENO:jobico::kube::dao::query_cluster_db server 1
LLLINENO:awk -v value=server -v col=1 '$5 == value {print $col}' work/cluster.txt
LLINENO:values=('192.168.122.10' '192.168.122.11')
LLINENO:local values
LLINENO:for e in "${values[@]}"
LLINENO:echo 192.168.122.10
LLINENO:for e in "${values[@]}"
LLINENO:echo 192.168.122.11
LINENO:serversip=('192.168.122.10' '192.168.122.11')
LINENO:local serversip
LLINENO:jobico::kube::dao::query_cluster_db server 2
LLLINENO:awk -v value=server -v col=2 '$5 == value {print $col}' work/cluster.txt
LLINENO:values=('server-0.kubernetes.local' 'server-1.kubernetes.local')
LLINENO:local values
LLINENO:for e in "${values[@]}"
LLINENO:echo server-0.kubernetes.local
LLINENO:for e in "${values[@]}"
LLINENO:echo server-1.kubernetes.local
LINENO:serversfqdn=('server-0.kubernetes.local' 'server-1.kubernetes.local')
LINENO:local serversfqdn
LLINENO:jobico::kube::dao::query_cluster_db server 3
LLLINENO:awk -v value=server -v col=3 '$5 == value {print $col}' work/cluster.txt
LLINENO:values=('server-0' 'server-1')
LLINENO:local values
LLINENO:for e in "${values[@]}"
LLINENO:echo server-0
LLINENO:for e in "${values[@]}"
LLINENO:echo server-1
LINENO:servershost=('server-0' 'server-1')
LINENO:local servershost
LLINENO:jobico::kube::dao::query_cluster_db lb 1
LLLINENO:awk -v value=lb -v col=1 '$5 == value {print $col}' work/cluster.txt
LLINENO:values=('192.168.122.8' '192.168.122.9')
LLINENO:local values
LLINENO:for e in "${values[@]}"
LLINENO:echo 192.168.122.8
LLINENO:for e in "${values[@]}"
LLINENO:echo 192.168.122.9
LINENO:lbs=('192.168.122.8' '192.168.122.9')
LINENO:local lbs
LLINENO:jobico::kube::dao::query_db control_plane
LLLINENO:awk -v value=control_plane -v col=1 '$2 == value {print $col}' work/db.txt
LLINENO:values=('server-0' 'server-1')
LLINENO:local values
LLINENO:for e in "${values[@]}"
LLINENO:echo server-0
LLINENO:for e in "${values[@]}"
LLINENO:echo server-1
LINENO:servers=('server-0' 'server-1')
LINENO:local servers
LLINENO:jobico::kube::dao::query_db gencert
LLLINENO:awk -v value=gencert -v col=1 '$2 == value {print $col}' work/db.txt
LLINENO:values=()
LLINENO:local values
LINENO:gencert=()
LINENO:local gencert
LLINENO:jobico::kube::dao::query_db genkubeconfig
LLLINENO:awk -v value=genkubeconfig -v col=1 '$2 == value {print $col}' work/db.txt
LLINENO:values=()
LLINENO:local values
LINENO:kubeconfig=()
LINENO:local kubeconfig
LLINENO:jobico::kube::etcd::get_etcd_servers
LLINENO:local cluster=
LLINENO:local i=0
LLINENO:read IP FQDN HOST SUBNET TYPE
LLINENO:'[' lbvip == server ']'
LLINENO:read IP FQDN HOST SUBNET TYPE
LLINENO:'[' lb == server ']'
LLINENO:read IP FQDN HOST SUBNET TYPE
LLINENO:'[' lb == server ']'
LLINENO:read IP FQDN HOST SUBNET TYPE
LLINENO:'[' server == server ']'
LLINENO:'[' -n '' ']'
LLINENO:cluster=https://192.168.122.10:2379
LLINENO:(( i++ ))
LLINENO:read IP FQDN HOST SUBNET TYPE
LLINENO:'[' server == server ']'
LLINENO:'[' -n https://192.168.122.10:2379 ']'
LLINENO:cluster=https://192.168.122.10:2379,
LLINENO:cluster=https://192.168.122.10:2379,https://192.168.122.11:2379
LLINENO:(( i++ ))
LLINENO:read IP FQDN HOST SUBNET TYPE
LLINENO:'[' node == server ']'
LLINENO:read IP FQDN HOST SUBNET TYPE
LLINENO:'[' node == server ']'
LLINENO:read IP FQDN HOST SUBNET TYPE
LLINENO:echo https://192.168.122.10:2379,https://192.168.122.11:2379
LINENO:local etcd_servers=https://192.168.122.10:2379,https://192.168.122.11:2379
LINENO:echo ----------notvip------------
LINENO:jobico::kube::dao::select_not_vip_cluster_db
LINENO:read IP FQDN HOST SUBNET TYPE
LLINENO:jobico::kube::dao::select_not_type_cluster_db lbvip
LLLINENO:awk -v value=lbvip '$5 != value {print $0}' work/cluster.txt
LLINENO:local 'result=192.168.122.8 lb-0.kubernetes.local lb-0 0.0.0.0/24 lb
192.168.122.9 lb-1.kubernetes.local lb-1 0.0.0.0/24 lb
192.168.122.10 server-0.kubernetes.local server-0 0.0.0.0/24 server
192.168.122.11 server-1.kubernetes.local server-1 0.0.0.0/24 server
192.168.122.12 node-0.kubernetes.local node-0 10.200.0.0/24 node
192.168.122.13 node-1.kubernetes.local node-1 10.200.1.0/24 node'
LLINENO:echo '192.168.122.8 lb-0.kubernetes.local lb-0 0.0.0.0/24 lb
192.168.122.9 lb-1.kubernetes.local lb-1 0.0.0.0/24 lb
192.168.122.10 server-0.kubernetes.local server-0 0.0.0.0/24 server
192.168.122.11 server-1.kubernetes.local server-1 0.0.0.0/24 server
192.168.122.12 node-0.kubernetes.local node-0 10.200.0.0/24 node
192.168.122.13 node-1.kubernetes.local node-1 10.200.1.0/24 node'
LINENO:echo '192.168.122.8 lb-0.kubernetes.local lb-0 0.0.0.0/24 lb
192.168.122.9 lb-1.kubernetes.local lb-1 0.0.0.0/24 lb
192.168.122.10 server-0.kubernetes.local server-0 0.0.0.0/24 server
192.168.122.11 server-1.kubernetes.local server-1 0.0.0.0/24 server
192.168.122.12 node-0.kubernetes.local node-0 10.200.0.0/24 node
192.168.122.13 node-1.kubernetes.local node-1 10.200.1.0/24 node'
LINENO:echo '192.168.122.8 lb-0.kubernetes.local lb-0 0.0.0.0/24 lb'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:echo '192.168.122.9 lb-1.kubernetes.local lb-1 0.0.0.0/24 lb'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:echo '192.168.122.10 server-0.kubernetes.local server-0 0.0.0.0/24 server'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:echo '192.168.122.11 server-1.kubernetes.local server-1 0.0.0.0/24 server'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:echo '192.168.122.12 node-0.kubernetes.local node-0 10.200.0.0/24 node'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:echo '192.168.122.13 node-1.kubernetes.local node-1 10.200.1.0/24 node'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:echo '---------- etcd ------------'
LINENO:echo https://192.168.122.10:2379,https://192.168.122.11:2379
LINENO:echo '----------n servers --------'
LINENO:echo 2
LINENO:echo ----------cluster-----------
LINENO:echo server-0=https://192.168.122.10:2380,server-1=https://192.168.122.11:2380
LINENO:echo ------------vip-------------
LINENO:echo 192.168.122.7
LINENO:echo server.kubernetes.local
LINENO:echo server
LINENO:echo ---------workers------------
LINENO:print_array node-0 node-1
LINENO:values=($@)
LINENO:for v in "${values[@]}"
LINENO:echo node-0
LINENO:for v in "${values[@]}"
LINENO:echo node-1
LINENO:echo ------------lb--------------
LINENO:print_array 192.168.122.8 192.168.122.9
LINENO:values=($@)
LINENO:for v in "${values[@]}"
LINENO:echo 192.168.122.8
LINENO:for v in "${values[@]}"
LINENO:echo 192.168.122.9
LINENO:echo ---------servers------------
LINENO:print_array server-0 server-1
LINENO:values=($@)
LINENO:for v in "${values[@]}"
LINENO:echo server-0
LINENO:for v in "${values[@]}"
LINENO:echo server-1
LINENO:echo '---------servers ips--------'
LINENO:print_array 192.168.122.10 192.168.122.11
LINENO:values=($@)
LINENO:for v in "${values[@]}"
LINENO:echo 192.168.122.10
LINENO:for v in "${values[@]}"
LINENO:echo 192.168.122.11
LINENO:echo '---------servers fqdn-------'
LINENO:print_array server-0.kubernetes.local server-1.kubernetes.local
LINENO:values=($@)
LINENO:for v in "${values[@]}"
LINENO:echo server-0.kubernetes.local
LINENO:for v in "${values[@]}"
LINENO:echo server-1.kubernetes.local
LINENO:echo '--------servers host--------'
LINENO:print_array server-0 server-1
LINENO:values=($@)
LINENO:for v in "${values[@]}"
LINENO:echo server-0
LINENO:for v in "${values[@]}"
LINENO:echo server-1
LINENO:echo '---------servers ip---------'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:'[' lbvip == server ']'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:'[' lb == server ']'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:'[' lb == server ']'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:'[' server == server ']'
LINENO:echo 'IP:192.168.122.10 FQDN:server-0.kubernetes.local HOST:server-0 SUBNET:0.0.0.0/24 TYPE:server'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:'[' server == server ']'
LINENO:echo 'IP:192.168.122.11 FQDN:server-1.kubernetes.local HOST:server-1 SUBNET:0.0.0.0/24 TYPE:server'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:'[' node == server ']'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:'[' node == server ']'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:echo ------certificates----------
LINENO:print_array
LINENO:values=($@)
LINENO:echo --------kubeconfig----------
LINENO:print_array
LINENO:values=($@)
LINENO:echo ---------cluster------------
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:echo 'IP:192.168.122.7 FQDN:server.kubernetes.local HOST:server SUBNET:0.0.0.0/24 TYPE:lbvip'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:echo 'IP:192.168.122.8 FQDN:lb-0.kubernetes.local HOST:lb-0 SUBNET:0.0.0.0/24 TYPE:lb'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:echo 'IP:192.168.122.9 FQDN:lb-1.kubernetes.local HOST:lb-1 SUBNET:0.0.0.0/24 TYPE:lb'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:echo 'IP:192.168.122.10 FQDN:server-0.kubernetes.local HOST:server-0 SUBNET:0.0.0.0/24 TYPE:server'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:echo 'IP:192.168.122.11 FQDN:server-1.kubernetes.local HOST:server-1 SUBNET:0.0.0.0/24 TYPE:server'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:echo 'IP:192.168.122.12 FQDN:node-0.kubernetes.local HOST:node-0 SUBNET:10.200.0.0/24 TYPE:node'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:echo 'IP:192.168.122.13 FQDN:node-1.kubernetes.local HOST:node-1 SUBNET:10.200.1.0/24 TYPE:node'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:echo ---------routes------------
LINENO:for worker1 in "${workers[@]}"
LINENO:for worker2 in "${workers[@]}"
LINENO:'[' node-0 '!=' node-0 ']'
LINENO:for worker2 in "${workers[@]}"
LINENO:'[' node-0 '!=' node-1 ']'
LLINENO:grep node-1 work/cluster.txt
LLINENO:cut -d ' ' -f 1
LINENO:node_ip=192.168.122.13
LLINENO:grep node-1 work/cluster.txt
LLINENO:cut -d ' ' -f 4
LINENO:node_subnet=10.200.1.0/24
LINENO:echo 'ssh root at node-0'
LINENO:echo 'to add route 10.200.1.0/24 via 192.168.122.13'
LINENO:for worker1 in "${workers[@]}"
LINENO:for worker2 in "${workers[@]}"
LINENO:'[' node-1 '!=' node-0 ']'
LLINENO:grep node-0 work/cluster.txt
LLINENO:cut -d ' ' -f 1
LINENO:node_ip=192.168.122.12
LLINENO:grep node-0 work/cluster.txt
LLINENO:cut -d ' ' -f 4
LINENO:node_subnet=10.200.0.0/24
LINENO:echo 'ssh root at node-1'
LINENO:echo 'to add route 10.200.0.0/24 via 192.168.122.12'
LINENO:for worker2 in "${workers[@]}"
LINENO:'[' node-1 '!=' node-1 ']'
LINENO:jobico::kube::create_vms
LINENO:grep -q machines work/jobico_status
LINENO:NOT_DRY_RUN jobico::kube::create_kvm_vms
LINENO:'[' true == false ']'
LINENO:NOT_DRY_RUN jobico::kube::wait_for_vms_ssh
LINENO:'[' true == false ']'
LINENO:jobico::kube::set_done machines
LINENO:echo '|machines|'
LINENO:jobico::kube::download_all
LINENO:grep -q downloads work/jobico_status
LINENO:NOT_DRY_RUN jobico::kube::download_deps
LINENO:'[' true == false ']'
LINENO:jobico::kube::set_done downloads
LINENO:echo '|downloads|'
LINENO:jobico::kube::create_cluster
LINENO:grep -q host work/jobico_status
LINENO:jobico::kube::gen_hostsfile
LINENO:echo '#B>' Kubernetes Cluster
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:entry='192.168.122.7 server.kubernetes.local server'
LINENO:echo 192.168.122.7 server.kubernetes.local server
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:entry='192.168.122.8 lb-0.kubernetes.local lb-0'
LINENO:echo 192.168.122.8 lb-0.kubernetes.local lb-0
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:entry='192.168.122.9 lb-1.kubernetes.local lb-1'
LINENO:echo 192.168.122.9 lb-1.kubernetes.local lb-1
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:entry='192.168.122.10 server-0.kubernetes.local server-0'
LINENO:echo 192.168.122.10 server-0.kubernetes.local server-0
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:entry='192.168.122.11 server-1.kubernetes.local server-1'
LINENO:echo 192.168.122.11 server-1.kubernetes.local server-1
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:entry='192.168.122.12 node-0.kubernetes.local node-0'
LINENO:echo 192.168.122.12 node-0.kubernetes.local node-0
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:entry='192.168.122.13 node-1.kubernetes.local node-1'
LINENO:echo 192.168.122.13 node-1.kubernetes.local node-1
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:echo '#E>' Kubernetes Cluster
LINENO:NOT_DRY_RUN jobico::kube::update_local_etc_hosts
LINENO:'[' true == false ']'
LINENO:NOT_DRY_RUN jobico::kube::update_ssh_known_hosts
LINENO:'[' true == false ']'
LINENO:NOT_DRY_RUN jobico::kube::cluster::set_hostname
LINENO:'[' true == false ']'
LINENO:NOT_DRY_RUN jobico::kube::cluster::update_etc_hosts
LINENO:'[' true == false ']'
LINENO:jobico::kube::set_done host
LINENO:echo '|host|'
LINENO:grep -q tls_certs work/jobico_status
LINENO:jobico::kube::tls::gen_ca_conf
LINENO:cp extras/tls/ca.conf.tmpl work/ca.conf
LLINENO:jobico::kube::dao::query_db worker
LLLINENO:awk -v value=worker -v col=1 '$2 == value {print $col}' work/db.txt
LLINENO:values=('node-0' 'node-1')
LLINENO:local values
LLINENO:for e in "${values[@]}"
LLINENO:echo node-0
LLINENO:for e in "${values[@]}"
LLINENO:echo node-1
LINENO:workers=('node-0' 'node-1')
LINENO:local workers
LINENO:local new_ca=
LINENO:for e in "${workers[@]}"
LLINENO:sed 's/{NAME}/node-0/g' extras/tls/ca.conf.nodes.tmpl
LINENO:node_req='#
# node-0 
#

[node-0]
distinguished_name = node-0_distinguished_name
prompt             = no
req_extensions     = node-0_req_extensions

[node-0_req_extensions]
basicConstraints     = CA:FALSE
extendedKeyUsage     = clientAuth, serverAuth
keyUsage             = critical, digitalSignature, keyEncipherment
nsCertType           = client
nsComment            = "node-0 Certificate"
subjectAltName       = DNS:node-0, IP:127.0.0.1
subjectKeyIdentifier = hash

[node-0_distinguished_name]
CN = system:node:node-0
O  = system:nodes
C  = CA
ST = Quebec
L  = Montreal'
LINENO:new_ca='\n\n#
# node-0 
#

[node-0]
distinguished_name = node-0_distinguished_name
prompt             = no
req_extensions     = node-0_req_extensions

[node-0_req_extensions]
basicConstraints     = CA:FALSE
extendedKeyUsage     = clientAuth, serverAuth
keyUsage             = critical, digitalSignature, keyEncipherment
nsCertType           = client
nsComment            = "node-0 Certificate"
subjectAltName       = DNS:node-0, IP:127.0.0.1
subjectKeyIdentifier = hash

[node-0_distinguished_name]
CN = system:node:node-0
O  = system:nodes
C  = CA
ST = Quebec
L  = Montreal'
LINENO:for e in "${workers[@]}"
LLINENO:sed 's/{NAME}/node-1/g' extras/tls/ca.conf.nodes.tmpl
LINENO:node_req='#
# node-1 
#

[node-1]
distinguished_name = node-1_distinguished_name
prompt             = no
req_extensions     = node-1_req_extensions

[node-1_req_extensions]
basicConstraints     = CA:FALSE
extendedKeyUsage     = clientAuth, serverAuth
keyUsage             = critical, digitalSignature, keyEncipherment
nsCertType           = client
nsComment            = "node-1 Certificate"
subjectAltName       = DNS:node-1, IP:127.0.0.1
subjectKeyIdentifier = hash

[node-1_distinguished_name]
CN = system:node:node-1
O  = system:nodes
C  = CA
ST = Quebec
L  = Montreal'
LINENO:new_ca='\n\n#
# node-0 
#

[node-0]
distinguished_name = node-0_distinguished_name
prompt             = no
req_extensions     = node-0_req_extensions

[node-0_req_extensions]
basicConstraints     = CA:FALSE
extendedKeyUsage     = clientAuth, serverAuth
keyUsage             = critical, digitalSignature, keyEncipherment
nsCertType           = client
nsComment            = "node-0 Certificate"
subjectAltName       = DNS:node-0, IP:127.0.0.1
subjectKeyIdentifier = hash

[node-0_distinguished_name]
CN = system:node:node-0
O  = system:nodes
C  = CA
ST = Quebec
L  = Montreal\n\n#
# node-1 
#

[node-1]
distinguished_name = node-1_distinguished_name
prompt             = no
req_extensions     = node-1_req_extensions

[node-1_req_extensions]
basicConstraints     = CA:FALSE
extendedKeyUsage     = clientAuth, serverAuth
keyUsage             = critical, digitalSignature, keyEncipherment
nsCertType           = client
nsComment            = "node-1 Certificate"
subjectAltName       = DNS:node-1, IP:127.0.0.1
subjectKeyIdentifier = hash

[node-1_distinguished_name]
CN = system:node:node-1
O  = system:nodes
C  = CA
ST = Quebec
L  = Montreal'
LINENO:echo -e '\n\n#
# node-0 
#

[node-0]
distinguished_name = node-0_distinguished_name
prompt             = no
req_extensions     = node-0_req_extensions

[node-0_req_extensions]
basicConstraints     = CA:FALSE
extendedKeyUsage     = clientAuth, serverAuth
keyUsage             = critical, digitalSignature, keyEncipherment
nsCertType           = client
nsComment            = "node-0 Certificate"
subjectAltName       = DNS:node-0, IP:127.0.0.1
subjectKeyIdentifier = hash

[node-0_distinguished_name]
CN = system:node:node-0
O  = system:nodes
C  = CA
ST = Quebec
L  = Montreal\n\n#
# node-1 
#

[node-1]
distinguished_name = node-1_distinguished_name
prompt             = no
req_extensions     = node-1_req_extensions

[node-1_req_extensions]
basicConstraints     = CA:FALSE
extendedKeyUsage     = clientAuth, serverAuth
keyUsage             = critical, digitalSignature, keyEncipherment
nsCertType           = client
nsComment            = "node-1 Certificate"
subjectAltName       = DNS:node-1, IP:127.0.0.1
subjectKeyIdentifier = hash

[node-1_distinguished_name]
CN = system:node:node-1
O  = system:nodes
C  = CA
ST = Quebec
L  = Montreal'
LINENO:local ips=
LINENO:local dns=
LINENO:local i=1
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:'[' lbvip == server ']'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:'[' lb == server ']'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:'[' lb == server ']'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:'[' server == server ']'
LINENO:ips='IP.1=192.168.122.10\n'
LINENO:dns='DNS.1=server-0.kubernetes.local\n'
LINENO:(( i++ ))
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:'[' server == server ']'
LINENO:ips='IP.1=192.168.122.10\nIP.2=192.168.122.11\n'
LINENO:dns='DNS.1=server-0.kubernetes.local\nDNS.2=server-1.kubernetes.local\n'
LINENO:(( i++ ))
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:'[' node == server ']'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:'[' node == server ']'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:sed -i 's/{ETCD_IPS}/IP.1=192.168.122.10\nIP.2=192.168.122.11\n/g' work/ca.conf
LINENO:sed -i 's/{ETCD_DNS}/DNS.1=server-0.kubernetes.local\nDNS.2=server-1.kubernetes.local\n/g' work/ca.conf
LINENO:sed -i 's/{API_SERVER_IPS}/IP.1=192.168.122.10\nIP.2=192.168.122.11\n/g' work/ca.conf
LLINENO:jobico::kube::dao::get_lb_data 1
LLLINENO:jobico::kube::dao::query_cluster_db lbvip 1
LLLLINENO:awk -v value=lbvip -v col=1 '$5 == value {print $col}' work/cluster.txt
LLLINENO:values=('192.168.122.7')
LLLINENO:local values
LLLINENO:for e in "${values[@]}"
LLLINENO:echo 192.168.122.7
LLINENO:local lb=192.168.122.7
LLINENO:echo 192.168.122.7
LINENO:local vip=192.168.122.7
LLINENO:jobico::kube::dao::get_lb_data 2
LLLINENO:jobico::kube::dao::query_cluster_db lbvip 2
LLLLINENO:awk -v value=lbvip -v col=2 '$5 == value {print $col}' work/cluster.txt
LLLINENO:values=('server.kubernetes.local')
LLLINENO:local values
LLLINENO:for e in "${values[@]}"
LLLINENO:echo server.kubernetes.local
LLINENO:local lb=server.kubernetes.local
LLINENO:echo server.kubernetes.local
LINENO:local vipname=server.kubernetes.local
LINENO:sed -i 's/{LB_IP}/192.168.122.7/g' work/ca.conf
LINENO:sed -i 's/{LB_DNS}/server.kubernetes.local/g' work/ca.conf
LINENO:jobico::kube::tls::gen_ca
LINENO:openssl genrsa -out work/ca.key 4096
LINENO:openssl req -x509 -new -sha512 -noenc -key work/ca.key -days 3653 -config work/ca.conf -out work/ca.crt
LINENO:jobico::kube::tls::gen_certs
LLINENO:jobico::kube::dao::query_db gencert
LLLINENO:awk -v value=gencert -v col=1 '$2 == value {print $col}' work/db.txt
LLINENO:values=()
LLINENO:local values
LINENO:comps=()
LINENO:local comps
LINENO:NOT_DRY_RUN jobico::kube::tls::deploy_certs_to_nodes
LINENO:'[' true == false ']'
LINENO:NOT_DRY_RUN jobico::kube::tls::deploy_certs_to_server
LINENO:'[' true == false ']'
LINENO:jobico::kube::set_done tls_certs
LINENO:echo '|tls_certs|'
LINENO:grep -q haproxy work/jobico_status
LINENO:jobico::kube::haproxy::gen_cfg
LLINENO:jobico::kube::dao::get_lb_data 1
LLLINENO:jobico::kube::dao::query_cluster_db lbvip 1
LLLLINENO:awk -v value=lbvip -v col=1 '$5 == value {print $col}' work/cluster.txt
LLLINENO:values=('192.168.122.7')
LLLINENO:local values
LLLINENO:for e in "${values[@]}"
LLLINENO:echo 192.168.122.7
LLINENO:local lb=192.168.122.7
LLINENO:echo 192.168.122.7
LINENO:local vip=192.168.122.7
LINENO:cp extras/configs/haproxy.cfg.tmpl work/haproxy.cfg
LINENO:local servers=
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:'[' lbvip == server ']'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:'[' lb == server ']'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:'[' lb == server ']'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:'[' server == server ']'
LINENO:servers='    server server-0 192.168.122.10:6443 check fall 3 rise 2\n'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:'[' server == server ']'
LINENO:servers='    server server-0 192.168.122.10:6443 check fall 3 rise 2\n    server server-1 192.168.122.11:6443 check fall 3 rise 2\n'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:'[' node == server ']'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:'[' node == server ']'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:sed -i 's/{LB_IPS}/    server server-0 192.168.122.10:6443 check fall 3 rise 2\n    server server-1 192.168.122.11:6443 check fall 3 rise 2\n/g' work/haproxy.cfg
LINENO:servers=($(jobico::kube::dao::query_cluster_db lb 1))
LLINENO:jobico::kube::dao::query_cluster_db lb 1
LLLINENO:awk -v value=lb -v col=1 '$5 == value {print $col}' work/cluster.txt
LLINENO:values=('192.168.122.8' '192.168.122.9')
LLINENO:local values
LLINENO:for e in "${values[@]}"
LLINENO:echo 192.168.122.8
LLINENO:for e in "${values[@]}"
LLINENO:echo 192.168.122.9
LINENO:for ip1 in ${servers[*]}
LINENO:file=work/keepalived192.168.122.8.conf
LINENO:cp extras/configs/keepalived.conf.tmpl work/keepalived192.168.122.8.conf
LINENO:sed -i 's/{IP}/192.168.122.8/g' work/keepalived192.168.122.8.conf
LINENO:sed -i 's/{VIP}/192.168.122.7/g' work/keepalived192.168.122.8.conf
LINENO:ips=
LINENO:for ip2 in ${servers[*]}
LINENO:'[' 192.168.122.8 '!=' 192.168.122.8 ']'
LINENO:for ip2 in ${servers[*]}
LINENO:'[' 192.168.122.8 '!=' 192.168.122.9 ']'
LINENO:ips='    192.168.122.9\n'
LINENO:sed -i 's/{LB_IPS}/    192.168.122.9\n/g' work/keepalived192.168.122.8.conf
LINENO:for ip1 in ${servers[*]}
LINENO:file=work/keepalived192.168.122.9.conf
LINENO:cp extras/configs/keepalived.conf.tmpl work/keepalived192.168.122.9.conf
LINENO:sed -i 's/{IP}/192.168.122.9/g' work/keepalived192.168.122.9.conf
LINENO:sed -i 's/{VIP}/192.168.122.7/g' work/keepalived192.168.122.9.conf
LINENO:ips=
LINENO:for ip2 in ${servers[*]}
LINENO:'[' 192.168.122.9 '!=' 192.168.122.8 ']'
LINENO:ips='    192.168.122.8\n'
LINENO:for ip2 in ${servers[*]}
LINENO:'[' 192.168.122.9 '!=' 192.168.122.9 ']'
LINENO:sed -i 's/{LB_IPS}/    192.168.122.8\n/g' work/keepalived192.168.122.9.conf
LINENO:NOT_DRY_RUN jobico::kube::haproxy::deploy
LINENO:'[' true == false ']'
LINENO:jobico::kube::set_done haproxy
LINENO:echo '|haproxy|'
LINENO:grep -q kubeconfig work/jobico_status
LINENO:jobico::kube::kubeconfig::gen_for_nodes
LLINENO:jobico::kube::dao::query_db worker
LLLINENO:awk -v value=worker -v col=1 '$2 == value {print $col}' work/db.txt
LLINENO:values=('node-0' 'node-1')
LLINENO:local values
LLINENO:for e in "${values[@]}"
LLINENO:echo node-0
LLINENO:for e in "${values[@]}"
LLINENO:echo node-1
LINENO:workers=('node-0' 'node-1')
LINENO:local workers
LLINENO:jobico::kube::dao::get_lb_data 2
LLLINENO:jobico::kube::dao::query_cluster_db lbvip 2
LLLLINENO:awk -v value=lbvip -v col=2 '$5 == value {print $col}' work/cluster.txt
LLLINENO:values=('server.kubernetes.local')
LLLINENO:local values
LLLINENO:for e in "${values[@]}"
LLLINENO:echo server.kubernetes.local
LLINENO:local lb=server.kubernetes.local
LLINENO:echo server.kubernetes.local
LINENO:local lb=server.kubernetes.local
LINENO:for host in ${workers[*]}
LINENO:kubectl config set-cluster jobico-cloud --certificate-authority=work/ca.crt --embed-certs=true --server=https://server.kubernetes.local:6443 --kubeconfig=work/node-0.kubeconfig
LINENO:kubectl config set-credentials system:node:node-0 --client-certificate=work/node-0.crt --client-key=work/node-0.key --embed-certs=true --kubeconfig=work/node-0.kubeconfig
error: could not stat client-certificate file work/node-0.crt: stat work/node-0.crt: no such file or directory
LINENO:kubectl config set-context default --cluster=jobico-cloud --user=system:node:node-0 --kubeconfig=work/node-0.kubeconfig
LINENO:kubectl config use-context default --kubeconfig=work/node-0.kubeconfig
LINENO:for host in ${workers[*]}
LINENO:kubectl config set-cluster jobico-cloud --certificate-authority=work/ca.crt --embed-certs=true --server=https://server.kubernetes.local:6443 --kubeconfig=work/node-1.kubeconfig
LINENO:kubectl config set-credentials system:node:node-1 --client-certificate=work/node-1.crt --client-key=work/node-1.key --embed-certs=true --kubeconfig=work/node-1.kubeconfig
error: could not stat client-certificate file work/node-1.crt: stat work/node-1.crt: no such file or directory
LINENO:kubectl config set-context default --cluster=jobico-cloud --user=system:node:node-1 --kubeconfig=work/node-1.kubeconfig
LINENO:kubectl config use-context default --kubeconfig=work/node-1.kubeconfig
LINENO:jobico::kube::kubeconfig::gen_for_controlplane
LLINENO:jobico::kube::dao::query_db genkubeconfig
LLLINENO:awk -v value=genkubeconfig -v col=1 '$2 == value {print $col}' work/db.txt
LLINENO:values=()
LLINENO:local values
LINENO:comps=()
LINENO:local comps
LLINENO:jobico::kube::dao::get_lb_data 2
LLLINENO:jobico::kube::dao::query_cluster_db lbvip 2
LLLLINENO:awk -v value=lbvip -v col=2 '$5 == value {print $col}' work/cluster.txt
LLLINENO:values=('server.kubernetes.local')
LLLINENO:local values
LLLINENO:for e in "${values[@]}"
LLLINENO:echo server.kubernetes.local
LLINENO:local lb=server.kubernetes.local
LLINENO:echo server.kubernetes.local
LINENO:local lb=server.kubernetes.local
LINENO:jobico::kube::kubeconfig::gen_locally_for_kube_admin
LINENO:kubectl config set-cluster jobico-cloud --certificate-authority=work/ca.crt --embed-certs=true --server=https://server.kubernetes.local:6443
LINENO:kubectl config set-credentials admin --client-certificate=work/admin.crt --client-key=work/admin.key
LINENO:kubectl config set-context jobico-cloud --cluster=jobico-cloud --user=admin
LINENO:kubectl config use-context jobico-cloud
LINENO:NOT_DRY_RUN jobico::kube::kubeconfig::deploy_to_nodes
LINENO:'[' true == false ']'
LINENO:NOT_DRY_RUN jobico::kube::kubeconfig::deploy_to_server
LINENO:'[' true == false ']'
LINENO:jobico::kube::set_done kubeconfig
LINENO:echo '|kubeconfig|'
LINENO:grep -q encatrest work/jobico_status
LINENO:jobico::kube::encryption::gen_key
LINENO:cat
LINENO:NOT_DRY_RUN jobico::kube::encryption::deploy_key_to_server
LINENO:'[' true == false ']'
LINENO:jobico::kube::set_done encatrest
LINENO:echo '|encatrest|'
LINENO:grep -q etcddb work/jobico_status
LINENO:jobico::kube::etcd::gen_etcd_services
LLINENO:jobico::kube::etcd::get_etcd_cluster
LLINENO:local cluster=
LLINENO:local i=0
LLINENO:read IP FQDN HOST SUBNET TYPE
LLINENO:'[' lbvip == server ']'
LLINENO:read IP FQDN HOST SUBNET TYPE
LLINENO:'[' lb == server ']'
LLINENO:read IP FQDN HOST SUBNET TYPE
LLINENO:'[' lb == server ']'
LLINENO:read IP FQDN HOST SUBNET TYPE
LLINENO:'[' server == server ']'
LLINENO:'[' -n '' ']'
LLINENO:cluster=server-0=https://192.168.122.10:2380
LLINENO:(( i++ ))
LLINENO:read IP FQDN HOST SUBNET TYPE
LLINENO:'[' server == server ']'
LLINENO:'[' -n server-0=https://192.168.122.10:2380 ']'
LLINENO:cluster=server-0=https://192.168.122.10:2380,
LLINENO:cluster=server-0=https://192.168.122.10:2380,server-1=https://192.168.122.11:2380
LLINENO:(( i++ ))
LLINENO:read IP FQDN HOST SUBNET TYPE
LLINENO:'[' node == server ']'
LLINENO:read IP FQDN HOST SUBNET TYPE
LLINENO:'[' node == server ']'
LLINENO:read IP FQDN HOST SUBNET TYPE
LLINENO:echo server-0=https://192.168.122.10:2380,server-1=https://192.168.122.11:2380
LINENO:local cluster=server-0=https://192.168.122.10:2380,server-1=https://192.168.122.11:2380
LLINENO:escape server-0=https://192.168.122.10:2380,server-1=https://192.168.122.11:2380
LLLINENO:printf '%s\n' server-0=https://192.168.122.10:2380,server-1=https://192.168.122.11:2380
LLLINENO:sed -e 's/[]\/$*.^[]/\\&/g'
LLINENO:escaped_result='server-0=https:\/\/192\.168\.122\.10:2380,server-1=https:\/\/192\.168\.122\.11:2380'
LLINENO:echo 'server-0=https:\/\/192\.168\.122\.10:2380,server-1=https:\/\/192\.168\.122\.11:2380'
LINENO:local 'clustere=server-0=https:\/\/192\.168\.122\.10:2380,server-1=https:\/\/192\.168\.122\.11:2380'
LINENO:local i=0
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:'[' lbvip == server ']'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:'[' lb == server ']'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:'[' lb == server ']'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:'[' server == server ']'
LINENO:file=work/etcd-192.168.122.10.service
LINENO:cp extras/units/etcd.service.tmpl work/etcd-192.168.122.10.service
LINENO:sed -i 's/{IP}/192.168.122.10/g' work/etcd-192.168.122.10.service
LINENO:sed -i 's/{ETCD_NAME}/server-0/g' work/etcd-192.168.122.10.service
LINENO:sed -i 's/{CLUSTER}/server-0=https:\/\/192\.168\.122\.10:2380,server-1=https:\/\/192\.168\.122\.11:2380/g' work/etcd-192.168.122.10.service
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:'[' server == server ']'
LINENO:file=work/etcd-192.168.122.11.service
LINENO:cp extras/units/etcd.service.tmpl work/etcd-192.168.122.11.service
LINENO:sed -i 's/{IP}/192.168.122.11/g' work/etcd-192.168.122.11.service
LINENO:sed -i 's/{ETCD_NAME}/server-1/g' work/etcd-192.168.122.11.service
LINENO:sed -i 's/{CLUSTER}/server-0=https:\/\/192\.168\.122\.10:2380,server-1=https:\/\/192\.168\.122\.11:2380/g' work/etcd-192.168.122.11.service
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:'[' node == server ']'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:'[' node == server ']'
LINENO:read IP FQDN HOST SUBNET TYPE
LINENO:NOT_DRY_RUN jobico::kube::etcd::install_to_server
LINENO:'[' true == false ']'
LINENO:jobico::kube::set_done etcddb
LINENO:echo '|etcddb|'
LINENO:grep -q deploy_server work/jobico_status
LINENO:NOT_DRY_RUN jobico::kube::deploy_deps_to_server
LINENO:'[' true == false ']'
LINENO:jobico::kube::set_done deploy_server
LINENO:echo '|deploy_server|'
LINENO:grep -q deploy_nodes work/jobico_status
LINENO:NOT_DRY_RUN jobico::kube::deploy_deps_to_nodes
LINENO:'[' true == false ']'
LINENO:jobico::kube::set_done deploy_nodes
LINENO:echo '|deploy_nodes|'
LINENO:grep -q add_routes work/jobico_status
LINENO:NOT_DRY_RUN jobico::kube::cluster::add_routes
LINENO:'[' true == false ']'
LINENO:jobico::kube::set_done add_routes
LINENO:echo '|add_routes|'
LINENO:NOT_DRY_RUN echo 'The K8s Cluster was created.'
LINENO:'[' true == false ']'
